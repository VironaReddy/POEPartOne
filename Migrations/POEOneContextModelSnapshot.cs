// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POEOne.Data;

#nullable disable

namespace POEOne.Migrations
{
    [DbContext(typeof(POEOneContext))]
    partial class POEOneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POEOne.Models.ClaimApproval", b =>
                {
                    b.Property<int>("ClaimApprovalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimApprovalId"));

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<string>("Approver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LecturerID")
                        .HasColumnType("int");

                    b.HasKey("ClaimApprovalId");

                    b.HasIndex("LecturerID");

                    b.ToTable("ClaimApproval");
                });

            modelBuilder.Entity("POEOne.Models.FileUpLoad", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.ToTable("FileUpLoad");
                });

            modelBuilder.Entity("POEOne.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerID"));

                    b.Property<int>("HoursTaught")
                        .HasColumnType("int");

                    b.Property<string>("LecturerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LecturerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("LecturerID");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("POEOne.Models.Status", b =>
                {
                    b.Property<int>("ClaimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimId"));

                    b.Property<int>("Approve")
                        .HasColumnType("int");

                    b.Property<int?>("ClaimApprovalId")
                        .HasColumnType("int");

                    b.Property<int>("LecturerID")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.HasIndex("ClaimApprovalId");

                    b.HasIndex("LecturerID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("POEOne.Models.ClaimApproval", b =>
                {
                    b.HasOne("POEOne.Models.Lecturer", "Lecturers")
                        .WithMany()
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturers");
                });

            modelBuilder.Entity("POEOne.Models.Status", b =>
                {
                    b.HasOne("POEOne.Models.ClaimApproval", "ClaimApproval")
                        .WithMany()
                        .HasForeignKey("ClaimApprovalId");

                    b.HasOne("POEOne.Models.Lecturer", "Lecturers")
                        .WithMany()
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaimApproval");

                    b.Navigation("Lecturers");
                });
#pragma warning restore 612, 618
        }
    }
}
